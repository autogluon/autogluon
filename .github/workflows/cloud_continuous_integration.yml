name: Cloud Continuous Integration

on:
  push:
    paths:
      - 'cloud/**'
      - '.github/workflows/cloud_continuous_integration.yml'
      - '.github/workflow_scripts/test_cloud.sh'
  pull_request_target:
    types: [labeled, synchronize]
    paths:
      - 'cloud/**'
      - '.github/workflows/cloud_continuous_integration.yml'
      - '.github/workflow_scripts/test_cloud.sh'

permissions:
  id-token: write
  contents: read
  pull-requests: write  # For removing tags from the PR

defaults:
  run:
    shell: bash

jobs:
  permission_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Actor Permission
        id: check
        continue-on-error: true
        uses: prince-chrismc/check-actor-permissions-action@v2
        with:
          github_token: ${{ github.token }}
          permission: write
      - name: Check PR Safe to Run
        if: ${{ github.event_name == 'pull_request_target' && (contains(github.event.pull_request.labels.*.name, 'cloud safe to test') == 'false') && steps.check.outputs.permitted == 'false' }}
        run: exit 1
      - name: Remove Safe to Test Label  # One commit is safe doesn't mean the next commit is safe.
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: 'cloud safe to test'
  test_general_cloud:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2
      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Test General Cloud
        uses: ./.github/actions/test-cloud
        with:
          submodule-to-test: general
  test_tabular_cloud:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2
      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Test Tabular Cloud
        uses: ./.github/actions/test-cloud
        with:
          submodule-to-test: tabular
  test_text_cloud:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2
      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Test Tabular Cloud
        uses: ./.github/actions/test-cloud
        with:
          submodule-to-test: text
  test_image_cloud:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2
      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Test Image Cloud
        uses: ./.github/actions/test-cloud
        with:
          submodule-to-test: image
  test_multimodal_cloud:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v2
      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Test Multimodal Cloud
        uses: ./.github/actions/test-cloud
        with:
          submodule-to-test: multimodal
