name: Unit Test Cross Platforms
on:
  push:
    branches:
    - master
  pull_request:
  issue_comment:
    types:
    - created
jobs:
  common:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/ci_cross_platforms'}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha   
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: unit-test
        shell: bash -l {0}
        run: |
          conda env create -n unittest -f .github/workflows_env/unittest_env.yml
          conda activate unittest
          conda list
          python3 -m pip install --upgrade -e common/[tests]
          env
          cd common/
          python3 -m pytest --junitxml=results.xml --runslow tests
  core:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/ci_cross_platforms'}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha   
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: unit-test
        shell: bash -l {0}
        run: |
          conda env create -n unittest -f .github/workflows_env/unittest_env.yml
          conda activate unittest
          conda list
          python3 -m pip install --upgrade -e common/[tests]
          python3 -m pip install --upgrade -e core/[all,tests]
          env
          cd core/
          python3 -m pytest --junitxml=results.xml --runslow tests
  features:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/ci_cross_platforms'}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha   
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: unit-test
        shell: bash -l {0}
        run: |
          conda env create -n unittest -f .github/workflows_env/unittest_env.yml
          conda activate unittest
          conda list
          python3 -m pip install --upgrade -e common/[tests]
          python3 -m pip install --upgrade -e features/
          env
          cd features/
          python3 -m pytest --junitxml=results.xml --runslow tests
  tabular:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/ci_cross_platforms'}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha   
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: unit-test
        shell: bash -l {0}
        run: |
          conda env create -n unittest -f .github/workflows_env/unittest_env.yml
          conda activate unittest
          conda list
          python3 -m pip install --upgrade -e common/[tests]
          python3 -m pip install --upgrade -e core/[all]
          python3 -m pip install --upgrade -e features/
          python3 -m pip install --upgrade -e tabular/[all]
          env
          cd tabular/
          python3 -m pytest --junitxml=results.xml --runslow -m "not gpu" tests
  install:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/ci_cross_platforms'}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha   
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.sha.outputs.result }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: unit-test
        shell: bash -l {0}
        run: |
          conda env create -n unittest -f .github/workflows_env/unittest_env.yml
          conda activate unittest
          conda list
          python3 -m pip install --upgrade -e common/[tests]
          python3 -m pip install --upgrade -e core/[all]
          python3 -m pip install --upgrade -e features/
          python3 -m pip install --upgrade -e tabular/[all]
          python3 -m pip install --upgrade -e text/
          python3 -m pip install --upgrade -e vision/
          python3 -m pip install --upgrade -e autogluon/
          env
