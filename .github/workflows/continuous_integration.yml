name: Continuous Integration

on:
  push:
    branches:
    - master
  pull_request_target:

permissions:
  id-token: write

# Ensures that only one CI task per PR will run at a time.
# This won't affect any push event
concurrency:
  group: CI-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test_common:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Test Common on AWS Batch
        uses: ./.github/actions/submit-job
        with:
          job-type: CI-CPU
          job-name: AutoGluon-Common
          command: chmod +x ./.github/workflow_scripts/test_common.sh && ./.github/workflow_scripts/test_common.sh
  # test_core:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Core on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-CPU
  #         job-name: AutoGluon-Core
  #         command: chmod +x ./.github/workflow_scripts/test_core.sh && ./.github/workflow_scripts/test_core.sh
  # test_features:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Features on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-CPU
  #         job-name: AutoGluon-Features
  #         command: chmod +x ./.github/workflow_scripts/test_features.sh && ./.github/workflow_scripts/test_features.sh
  # test_tabular:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Tabular on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-Tabular
  #         command: chmod +x ./.github/workflow_scripts/test_tabular.sh && ./.github/workflow_scripts/test_tabular.sh
  # test_text:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Text on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-Text
  #         command: chmod +x ./.github/workflow_scripts/test_text.sh && ./.github/workflow_scripts/test_text.sh
  test_vision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Test Vision on AWS Batch
        uses: ./.github/actions/submit-job
        with:
          job-type: CI-GPU
          job-name: AutoGluon-Vision
          command: chmod +x ./.github/workflow_scripts/test_vision.sh && ./.github/workflow_scripts/test_vision.sh
  # test_forecasting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Forecasting on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-Forecasting
  #         command: chmod +x ./.github/workflow_scripts/test_forecasting.sh && ./.github/workflow_scripts/test_forecasting.sh
  # test_install:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Test Install on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-CPU
  #         job-name: AutoGluon-Install
  #         command: chmod +x ./.github/workflow_scripts/test_install.sh && ./.github/workflow_scripts/test_install.sh
  # build_image_prediction_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Image Prediction Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildImagePrediction
  #         command: chmod +x ./.github/workflow_scripts/build_image_prediction_tutorial.sh && ./.github/workflow_scripts/build_image_prediction_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_object_detection_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Object Detection Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildObjectDetection
  #         command: chmod +x ./.github/workflow_scripts/build_object_detection_tutorial.sh && ./.github/workflow_scripts/build_object_detection_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_tabular_prediction_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Tabular Prediction Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildTabularPrediction
  #         command: chmod +x ./.github/workflow_scripts/build_tabular_prediction_tutorial.sh && ./.github/workflow_scripts/build_tabular_prediction_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_text_prediction_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Text Prediction Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildTextPrediction
  #         command: chmod +x ./.github/workflow_scripts/build_text_prediction_tutorial.sh && ./.github/workflow_scripts/build_text_prediction_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_cloud_fit_deploy_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Cloud Fit Deploy Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-CPU
  #         job-name: AutoGluon-BuildCloudFitDeploy
  #         command: chmod +x ./.github/workflow_scripts/build_cloud_fit_deploy_tutorial.sh && ./.github/workflow_scripts/build_cloud_fit_deploy_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_forecasting_tutorial:
  #   needs: [test_common, test_core, test_features, test_tabular, test_text, test_vision, test_forecasting, test_install]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build Forecasting Tutorial on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildForecasting
  #         command: chmod +x ./.github/workflow_scripts/build_forecasting_tutorial.sh && ./.github/workflow_scripts/build_forecasting_tutorial.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # build_all_docs:
  #   needs: [build_image_prediction_tutorial, build_object_detection_tutorial, build_tabular_prediction_tutorial, build_text_prediction_tutorial, build_cloud_fit_deploy_tutorial, build_forecasting_tutorial]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup Env Vars
  #       uses: ./.github/actions/setup-env-vars
  #     - name: Build All Docs on AWS Batch
  #       uses: ./.github/actions/submit-job
  #       with:
  #         job-type: CI-GPU
  #         job-name: AutoGluon-BuildAllDocs
  #         command: chmod +x ./.github/workflow_scripts/build_all_docs.sh && ./.github/workflow_scripts/build_all_docs.sh ${{ env.BRANCH }} ${{ env.GIT_REPO }} ${{ env.SHORT_SHA }} ${{ env.PR_NUMBER }}
  # copy-docs:
  #   needs: build_all_docs
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: arn:aws:iam::087278669274:role/AutoGluonWebCiRole
  #         role-duration-seconds: 7200
  #         aws-region: us-east-1
  #     - name: Copy Docs to Bucket(For push)
  #       if: ${{ github.event_name == 'push' }}
  #       run: |
  #         chmod +x ./.github/workflow_scripts/copy_docs.sh
  #         ./.github/workflow_scripts/copy_docs.sh ${{ github.ref }} ${{ github.repository }} ${{ env.SHORT_SHA }}
  #     - name: Copy Docs to Bucket(For pull request)
  #       if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
  #       run: |
  #         chmod +x ./.github/workflow_scripts/copy_docs.sh
  #         ./.github/workflow_scripts/copy_docs.sh ${{ github.event.pull_request.head.ref }} ${{ github.event.pull_request.head.repo.full_name }} ${{ env.SHORT_SHA }} PR-${{ github.event.number }}
  #     - name: Comment on PR
  #       if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
  #       uses: peter-evans/create-or-update-comment@v1.4.5
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body: |
  #           Job PR-${{ github.event.number }}-${{ env.SHORT_SHA }} is done.
  #           Docs are uploaded to http://autogluon-doc-staging.s3.amazonaws.com/staging/PR-${{ github.event.number }}/${{ env.SHORT_SHA }}/index.html
